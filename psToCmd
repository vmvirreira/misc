param (
    [string]$Server = "tcp:my-listener.domain.com,1433",
    [string]$Database = "MyDatabase"
)

# Define connection string (with MultiSubnetFailover support)
$connectionString = "Server=$Server;Database=$Database;Integrated Security=SSPI;MultiSubnetFailover=True"

# Create SQL connection
$connection = New-Object System.Data.SqlClient.SqlConnection
$connection.ConnectionString = $connectionString
$connection.Open()

try {
    # Create SQL command
    $command = $connection.CreateCommand()
    $command.CommandType = [System.Data.CommandType]::Text

    # Define multi-line SQL within a transaction
    $command.CommandText = @"
BEGIN TRY
    BEGIN TRANSACTION T1;

        -- Your SQL statements here
        UPDATE dbo.MyTable
        SET SomeColumn = 'NewValue'
        WHERE Id IN (SELECT TOP 10 Id FROM dbo.MyTable ORDER BY CreatedDate);

        INSERT INTO dbo.AuditTable (Action, PerformedBy, PerformedOn)
        VALUES ('BulkUpdate', SYSTEM_USER, GETDATE());

    COMMIT TRANSACTION T1;
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION T1;

    THROW; -- Rethrow the error to PowerShell
END CATCH;
"@

    # Set a higher timeout for long-running scripts
    $command.CommandTimeout = 600

    # Execute the SQL transaction
    $command.ExecuteNonQuery()
    Write-Host "SQL transaction executed successfully."
}
catch {
    Write-Host "Error executing SQL transaction: $($_.Exception.Message)" -ForegroundColor Red
}
finally {
    # Cleanup
    $connection.Close()
}
